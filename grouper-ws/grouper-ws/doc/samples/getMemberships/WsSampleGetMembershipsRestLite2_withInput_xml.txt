Grouper web service sample of service: getMemberships, WsSampleGetMembershipsRestLite2, manually written lite/rest, type: _withInput, format: xml, for version: 2.5.0


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


GET /grouper-ws/servicesRest/xml/v2_5_000/subjects/10021368/memberships HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.1
Host: localhost:8092


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200
Cache-Control: private
Expires: Thu, 01 Jan 1970 00:00:00 GMT
Set-Cookie: JSESSIONID=xxxxxxxxxxxxxxxxxxxxxxxx; Path=/grouper-ws; HttpOnly
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: application/xml;charset=UTF-8
Transfer-Encoding: chunked
Date: Mon, 06 Aug 2018 16:41:49 GMT
Connection: close

3fd
<WsGetMembershipsResults>
  <wsMemberships>
    <WsMembership>
      <membershipId>c063e7ebe5284fde956d0f53e1d47fbb:86f7a1fbdd5a48ac8653c7affd20c712</membershipId>
      <immediateMembershipId>c063e7ebe5284fde956d0f53e1d47fbb</immediateMembershipId>
      <listName>members</listName>
      <listType>list</listType>
      <membershipType>immediate</membershipType>
      <enabled>T</enabled>
      <memberId>8ba2b7659552439c98a8e71e59b36f63</memberId>
      <groupId>03aae7141082467eaaa866e6c6edfda5</groupId>
      <subjectId>10021368</subjectId>
      <subjectSourceId>jdbc</subjectSourceId>
      <groupName>aStem:aGroup</groupName>
      <createTime>2018/08/06 12:37:40.392</createTime>
    </WsMembership>
    <WsMembership>
      <membershipId>82a140a2a32741798121870185e87b79:704640cf0dd04a808038c0d9a8146923</membershipId>
      <immediateMembershipId>82a140a2a32741798121870185e87b79</immediateMembershipId>
      <listName>members</listName>
      <listType>list</listType>
      <membershipType>immediate</membershipType>
      <enabled>T</enabled>
      <memberId>8ba2b7659552439c98a8e71e59b36f63</memberId>
      <groupId>08cc1f2ccd3248ff801db35946e03823</groupId>
      <
3f6
subjectId>
      </subjectId>
      <subjectSourceId>jdbc</subjectSourceId>
      <groupName>aStem:aGroup2</groupName>
      <createTime>2018/08/06 11:04:00.726</createTime>
    </WsMembership>
    <WsMembership>
      <membershipId>9862d3f0bb5c4ac9a38a5a564bd469f9:74084e0c21dc43f2a8cd46514039d98f</membershipId>
      <immediateMembershipId>9862d3f0bb5c4ac9a38a5a564bd469f9</immediateMembershipId>
      <listName>members</listName>
      <listType>list</listType>
      <membershipType>immediate</membershipType>
      <enabled>T</enabled>
      <memberId>8ba2b7659552439c98a8e71e59b36f63</memberId>
      <groupId>5cbabdd15c1d49ceae302f8e844b0009</groupId>
      <subjectId>10021368</subjectId>
      <subjectSourceId>jdbc</subjectSourceId>
      <groupName>etc:sysadmingroup</groupName>
      <createTime>2018/08/06 11:04:01.133</createTime>
    </WsMembership>
    <WsMembership>
      <membershipId>dc561ed926b2497fa14254e49adfb88d:3e16879243e44f23aecff3ceb54d5782</membershipId>
      <immediateMembershipId>dc561ed926b2497fa14254e49adfb88d</immediateMembershipId>
      <listName>members</listName>
      <listType>list</listType>
      <membershipType>
      </
3ff
membershipType>
      <enabled>T</enabled>
      <memberId>8ba2b7659552439c98a8e71e59b36f63</memberId>
      <groupId>a3b9b6852757437981d39b7a14a0bfd7</groupId>
      <subjectId>10021368</subjectId>
      <subjectSourceId>jdbc</subjectSourceId>
      <groupName>etc:webServiceActAsGroup</groupName>
      <createTime>2018/08/06 11:04:01.076</createTime>
    </WsMembership>
  </wsMemberships>
  <wsGroups>
    <WsGroup>
      <extension>aGroup</extension>
      <typeOfGroup>group</typeOfGroup>
      <displayExtension>a group</displayExtension>
      <description>a group description</description>
      <displayName>a stem:a group</displayName>
      <name>aStem:aGroup</name>
      <uuid>03aae7141082467eaaa866e6c6edfda5</uuid>
      <idIndex>10005</idIndex>
    </WsGroup>
    <WsGroup>
      <extension>aGroup2</extension>
      <typeOfGroup>group</typeOfGroup>
      <displayExtension>a group2</displayExtension>
      <description>a group description2</description>
      <displayName>a stem:a group2</displayName>
      <name>aStem:aGroup2</name>
      <uuid>08cc1f2ccd3248ff801db35946e03823</uuid>
      <idIndex>10006</idIndex>
    </WsGroup>
    <WsGroup>
      <extension>sysadmingroup</extension>
      <typeOfGroup>group
3e2
</typeOfGroup>
      <displayExtension>sysadmingroup</displayExtension>
      <displayName>etc:sysadmingroup</displayName>
      <name>etc:sysadmingroup</name>
      <uuid>5cbabdd15c1d49ceae302f8e844b0009</uuid>
      <idIndex>10009</idIndex>
    </WsGroup>
    <WsGroup>
      <extension>webServiceActAsGroup</extension>
      <typeOfGroup>group</typeOfGroup>
      <displayExtension>webServiceActAsGroup</displayExtension>
      <displayName>etc:webServiceActAsGroup</displayName>
      <name>etc:webServiceActAsGroup</name>
      <uuid>a3b9b6852757437981d39b7a14a0bfd7</uuid>
      <idIndex>10008</idIndex>
    </WsGroup>
  </wsGroups>
  <wsSubjects>
    <WsSubject>
      <resultCode>SUCCESS</resultCode>
      <success>T</success>
      <id>10021368</id>
      <sourceId>jdbc</sourceId>
    </WsSubject>
  </wsSubjects>
  <resultMetadata>
    <resultCode>SUCCESS</resultCode>
    <resultMessage>Found 4 results involving 4 groups and 1 subjects</resultMessage>
    <success>T</success>
  </resultMetadata>
  <responseMetadata>
    <resultWarnings></resultWarnings>
    <millis>44</millis>
    <serverVersion>2.5.0</serverVersion>
  </responseMetadata>
</WsGetMembershipsResults>
0


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


/*******************************************************************************
 * Copyright 2012 Internet2
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package edu.internet2.middleware.grouper.ws.samples.rest.membership;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.GetMethod;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.ws.coresoap.WsGetMembershipsResults;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleGetMembershipsRestLite2 implements WsSampleRest {

  /**
   * get members lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  @SuppressWarnings("deprecation")
  public static void getMembershipsLite(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      GetMethod method = new GetMethod(
          RestClientSettings.URL + "/" + wsSampleRestType.getWsLiteResponseContentType().name()
            + "/" + RestClientSettings.VERSION  
            + "/subjects/10021368/memberships");

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);
      
      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      //convert to object (from xhtml, xml, json, etc)
      WsGetMembershipsResults wsGetMembershipsResults = (WsGetMembershipsResults)wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      String resultMessage = wsGetMembershipsResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsGetMembershipsResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  @SuppressWarnings("unchecked")
  public static void main(String[] args) {
    getMembershipsLite(WsSampleRestType.xml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    getMembershipsLite(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    return true;
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: 2.5.0, result code: SUCCESS, result message: Found 4 results involving 4 groups and 1 subjects
