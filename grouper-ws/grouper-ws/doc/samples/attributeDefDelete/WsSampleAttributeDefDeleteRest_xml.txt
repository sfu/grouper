Grouper web service sample of service: attributeDefDelete, WsSampleAttributeDefDeleteRest, manually written lite/rest, format: xml, for version: 2.5.0


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouper-ws/servicesRest/v2_5_000/attributeDefs HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.1
Host: localhost:8092
Content-Length: 259
Content-Type: application/xml; charset=UTF-8

<WsRestAttributeDefDeleteRequest>
  <wsAttributeDefLookups>
    <WsAttributeDefLookup>
      <name>test:test1</name>
    </WsAttributeDefLookup>
  </wsAttributeDefLookups>
  <actAsSubjectLookup>
    <subjectId>GrouperSystem</subjectId>
  </actAsSubjectLookup>
</WsRestAttributeDefDeleteRequest>


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200
Set-Cookie: JSESSIONID=xxxxxxxxxxxxxxxxxxxxxxxx; Path=/grouper-ws; HttpOnly
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: application/xml;charset=UTF-8
Transfer-Encoding: chunked
Date: Mon, 06 Aug 2018 16:36:28 GMT
Connection: close

3ff
<WsAttributeDefDeleteResults>
  <results>
    <WsAttributeDefDeleteResult>
      <wsAttributeDef>
        <extension>test1</extension>
        <name>test:test1</name>
        <assignToAttributeDef>F</assignToAttributeDef>
        <assignToAttributeDefAssignment>F</assignToAttributeDefAssignment>
        <assignToEffectiveMembership>F</assignToEffectiveMembership>
        <assignToEffectiveMembershipAssignment>F</assignToEffectiveMembershipAssignment>
        <assignToGroup>F</assignToGroup>
        <assignToGroupAssignment>F</assignToGroupAssignment>
        <assignToImmediateMembership>F</assignToImmediateMembership>
        <assignToImmediateMembershipAssignment>F</assignToImmediateMembershipAssignment>
        <assignToMember>F</assignToMember>
        <assignToMemberAssignment>F</assignToMemberAssignment>
        <assignToStem>F</assignToStem>
        <assignToStemAssignment>F</assignToStemAssignment>
      </wsAttributeDef>
      <resultMetadata>
        <resultCode>SUCCESS_ATTRIBUTE_DEF_NOT_FOUND</resultCode>
        <resultMessage>Cant find attribute def: &apos;WsAttributeDefLookup[name=test:test1,
attributeDefFindResult=ATTRIBUTE_DEF_NOT_FOUND]&apos;.  </resultMessage
225
>
        <success>T</success>
      </resultMetadata>
    </WsAttributeDefDeleteResult>
  </results>
  <resultMetadata>
    <resultCode>SUCCESS</resultCode>
    <resultMessage>Success for: clientVersion: 2.5.0, wsAttributeDefLookups: Array size: 1: [0]: WsAttributeDefLookup[name=test:test1]
, actAsSubject: WsSubjectLookup[subjectId=GrouperSystem]
, paramNames:
, params: null</resultMessage>
    <success>T</success>
  </resultMetadata>
  <responseMetadata>
    <resultWarnings></resultWarnings>
    <millis>4</millis>
    <serverVersion>2.5.0</serverVersion>
  </responseMetadata>
</WsAttributeDefDeleteResults>
0


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


/**
 * 
 */
package edu.internet2.middleware.grouper.ws.samples.rest.attribute;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.util.GrouperUtil;
import edu.internet2.middleware.grouper.ws.coresoap.WsAttributeDefDeleteResult;
import edu.internet2.middleware.grouper.ws.coresoap.WsAttributeDefDeleteResults;
import edu.internet2.middleware.grouper.ws.coresoap.WsAttributeDefLookup;
import edu.internet2.middleware.grouper.ws.coresoap.WsSubjectLookup;
import edu.internet2.middleware.grouper.ws.rest.WsRestResultProblem;
import edu.internet2.middleware.grouper.ws.rest.attribute.WsRestAttributeDefDeleteRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author vsachdeva
 *
 */
public class WsSampleAttributeDefDeleteRest implements WsSampleRest {

  /**
   * AttributeDefDelete web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  public static void attributeDefDelete(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();

      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      PostMethod method = new PostMethod(
          RestClientSettings.URL + "/" + RestClientSettings.VERSION
              + "/attributeDefs");

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER,
          RestClientSettings.PASS);

      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");

      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(
              new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT),
              defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestAttributeDefDeleteRequest attributeDefDeleteRequest = new WsRestAttributeDefDeleteRequest();

      // set the act as id
      WsSubjectLookup actAsSubject = new WsSubjectLookup("GrouperSystem", null, null);
      attributeDefDeleteRequest.setActAsSubjectLookup(actAsSubject);

      WsAttributeDefLookup wsAttributeDefLookup = new WsAttributeDefLookup("test:test1",
          null);
      attributeDefDeleteRequest
          .setWsAttributeDefLookups(new WsAttributeDefLookup[] { wsAttributeDefLookup });

      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType()
          .writeString(attributeDefDeleteRequest);

      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType()
          .getContentType();

      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType,
          "UTF-8"));

      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();

      String response = RestClientSettings.responseBodyAsString(method);

      Object result = wsSampleRestType
          .getWsLiteResponseContentType().parseString(response);

      //see if problem
      if (result instanceof WsRestResultProblem) {
        throw new RuntimeException(((WsRestResultProblem) result).getResultMetadata()
            .getResultMessage());
      }

      //convert to object (from xhtml, xml, json, etc)
      WsAttributeDefDeleteResults wsAttributeDefDeleteResults = (WsAttributeDefDeleteResults) result;

      String resultMessage = wsAttributeDefDeleteResults.getResultMetadata()
          .getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: successString: "
            + successString + ", resultCode: " + resultCode
            + ", " + resultMessage);
      }

      System.out.println("Server version: "
          + wsAttributeDefDeleteResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage);

      for (WsAttributeDefDeleteResult wsAttributeDefDeleteResult : GrouperUtil.nonNull(
          wsAttributeDefDeleteResults.getResults(), WsAttributeDefDeleteResult.class)) {
        System.out.println("Result: "
            + wsAttributeDefDeleteResult.getResultMetadata().getResultCode()
            + " for " + wsAttributeDefDeleteResult.getWsAttributeDef().getName());
      }

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  public static void main(String[] args) {
    attributeDefDelete(WsSampleRestType.xhtml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  @Override
  public void executeSample(WsSampleRestType wsSampleRestType) {
    attributeDefDelete(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  @Override
  public boolean validType(WsSampleRestType wsSampleRestType) {
    //dont allow http params
    return !WsSampleRestType.http_json.equals(wsSampleRestType);
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: 2.5.0, result code: SUCCESS, result message: Success for: clientVersion: 2.5.0, wsAttributeDefLookups: Array size: 1: [0]: WsAttributeDefLookup[name=test:test1]
, actAsSubject: WsSubjectLookup[subjectId=GrouperSystem]
, paramNames: 
, params: null
Result: SUCCESS_ATTRIBUTE_DEF_NOT_FOUND for test:test1
