Grouper web service sample of service: attributeDefSave, WsSampleAttributeDefSaveRestLite, manually written lite/rest, format: json, for version: 2.5.0


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouper-ws/servicesRest/v2_5_000/attributeDefs HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.1
Host: localhost:8092
Content-Length: 276
Content-Type: application/json; charset=UTF-8

{
  "WsRestAttributeDefSaveLiteRequest":{
    "attributeDefType":"attr",
    "description":"This is a test description",
    "createParentStemsIfNotExist":"T",
    "valueType":"string",
    "assignToAttributeDef":"T",
    "multiAssignable":"F",
    "nameOfAttributeDef":"test1:testAttributeDef",
    "multiValued":"F"
  }
}


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 201
Set-Cookie: JSESSIONID=xxxxxxxxxxxxxxxxxxxxxxxx; Path=/grouper-ws; HttpOnly
X-Grouper-resultCode: SUCCESS_NO_CHANGES_NEEDED
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: application/json;charset=UTF-8
Content-Length: 1154
Date: Mon, 06 Aug 2018 16:37:17 GMT
Connection: close

{
  "WsAttributeDefSaveLiteResult":{
    "resultMetadata":{
      "success":"T",
      "resultCode":"SUCCESS_NO_CHANGES_NEEDED",
      "resultMessage":"Success for: clientVersion: 2.5.0, wsAttributeDefsToSave: Array size: 1: [0]: WsAttributeDefToSave[\n  wsAttributeDefLookup=WsAttributeDefLookup[pitAttributeDefs=[]],\n  wsAttributeDef=WsAttributeDef[description=This is a test description,name=test1:testAtt...\n, actAsSubject: null, txType: NONE, paramNames: \n, params: null"
    },
    "responseMetadata":{
      "serverVersion":"2.5.0",
      "millis":"22"
    },
    "wsAttributeDef":{
      "attributeDefType":"attr",
      "assignToAttributeDef":"F",
      "assignToStemAssignment":"F",
      "extension":"testAttributeDef",
      "description":"This is a test description",
      "assignToMemberAssignment":"F",
      "assignToEffectiveMembership":"F",
      "uuid":"512af2c1c0544263a673e2daee8bcc91",
      "assignToImmediateMembershipAssignment":"F",
      "assignToEffectiveMembershipAssignment":"F",
      "assignToStem":"F",
      "assignToGroupAssignment":"F",
      "assignToMember":"F",
      "multiAssignable":"F",
      "valueType":"string",
      "name":"test1:testAttributeDef",
      "assignToAttributeDefAssignment":"F",
      "idIndex":"10075",
      "multiValued":"F",
      "assignToGroup":"F",
      "assignToImmediateMembership":"F"
    }
  }
}


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


/*******************************************************************************
 * Copyright 2016 Internet2
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package edu.internet2.middleware.grouper.ws.samples.rest.attribute;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.ws.coresoap.WsAttributeDefSaveLiteResult;
import edu.internet2.middleware.grouper.ws.rest.WsRestResultProblem;
import edu.internet2.middleware.grouper.ws.rest.attribute.WsRestAttributeDefSaveLiteRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author vsachdeva
 */
public class WsSampleAttributeDefSaveRestLite implements WsSampleRest {

  /**
   * attribute def save lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  public static void attributeDefSaveLite(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aAttributeDefName urlencoded substitutes %3A for a colon
      PostMethod method = new PostMethod(
          RestClientSettings.URL + "/" + RestClientSettings.VERSION  
            + "/attributeDefs");
      
      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);
      
      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestAttributeDefSaveLiteRequest attributeDefSaveLite = new WsRestAttributeDefSaveLiteRequest();

      attributeDefSaveLite.setAttributeDefType("attr");
      attributeDefSaveLite.setAssignToAttributeDef("T");
      attributeDefSaveLite.setMultiAssignable("F");
      attributeDefSaveLite.setMultiValued("F");
      attributeDefSaveLite.setValueType("string");
      attributeDefSaveLite.setCreateParentStemsIfNotExist("T");
      attributeDefSaveLite.setDescription("This is a test description");
      attributeDefSaveLite.setNameOfAttributeDef("test1:testAttributeDef");
      
      
      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(attributeDefSaveLite);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));
      
      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      Object resultObject = wsSampleRestType.getWsLiteResponseContentType().parseString(response);
    
      //see if problem
      if (resultObject instanceof WsRestResultProblem) {
        throw new RuntimeException(((WsRestResultProblem)resultObject).getResultMetadata().getResultMessage());
      }

      //convert to object (from xhtml, xml, json, etc)
      WsAttributeDefSaveLiteResult wsAttributeDefSaveLiteResult = (WsAttributeDefSaveLiteResult)resultObject;
      
      String resultMessage = wsAttributeDefSaveLiteResult.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsAttributeDefSaveLiteResult.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  public static void main(String[] args) {
    attributeDefSaveLite(WsSampleRestType.xhtml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  @Override
  public void executeSample(WsSampleRestType wsSampleRestType) {
    attributeDefSaveLite(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  @Override
  public boolean validType(WsSampleRestType wsSampleRestType) {
    //allow all
    return true;
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: 2.5.0, result code: SUCCESS_NO_CHANGES_NEEDED, result message: Success for: clientVersion: 2.5.0, wsAttributeDefsToSave: Array size: 1: [0]: WsAttributeDefToSave[
  wsAttributeDefLookup=WsAttributeDefLookup[pitAttributeDefs=[]],
  wsAttributeDef=WsAttributeDef[description=This is a test description,name=test1:testAtt...
, actAsSubject: null, txType: NONE, paramNames: 
, params: null
